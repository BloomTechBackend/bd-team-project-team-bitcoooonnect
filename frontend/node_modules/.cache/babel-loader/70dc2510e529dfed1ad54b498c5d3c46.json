{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.concat.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// https://my-coins.auth.us-east-2.amazoncognito.com/login?client_id=n2l1crskuigpqp3lrbsj8r7nj&response_type=token&scope=email+openid&redirect_uri=http://localhost:8080/\nimport axios from 'axios';\nexport default {\n  name: 'MyPortfolio',\n  props: {\n    msg: String,\n    auth: String,\n    jwt: String,\n    email: String\n  },\n  data: function data() {\n    return {\n      coins: [],\n      state: \"ready\",\n      newCoin: {\n        name: null,\n        amount: null\n      },\n      userEmail: \"\",\n      url: \"https://t3d210uhn7.execute-api.us-east-2.amazonaws.com/test/portfolio?emailId=\".concat(this.userEmail)\n    };\n  },\n  mounted: function mounted() {\n    this.state = \"loading\";\n    this.getCoin();\n    this.parseJwt();\n  },\n  methods: {\n    getCoin: function getCoin() {\n      var _this = this;\n\n      this.state = \"loading\";\n      axios.get(this.url, {\n        headers: {\n          \"Authorization\": this.auth\n        }\n      }).then(function (response) {\n        _this.coins = response.data.coins;\n        _this.state = \"ready\";\n      });\n    },\n    parseJwt: function (_parseJwt) {\n      function parseJwt() {\n        return _parseJwt.apply(this, arguments);\n      }\n\n      parseJwt.toString = function () {\n        return _parseJwt.toString();\n      };\n\n      return parseJwt;\n    }(function () {\n      var authTokenWithEquals = location.href.split('#')[1].split('&')[1];\n      var COGNITO_ID_TOKEN = idTokenWithEquals.split('=')[1];\n      COGNITO_ID_TOKEN = parseJwt(COGNITO_ID_TOKEN);\n      COGNITO_ID_TOKEN.email;\n    }),\n    updateCoin: function updateCoin() {\n      var _this2 = this;\n\n      this.state = \"loading\";\n\n      if (this.newCoin.name === null || this.newCoin.amount === null) {\n        console.log(\"empty updatecoin\");\n        return;\n      }\n\n      var extraParams = \"&coinId=\".concat(this.newCoin.name, \"&amount=\").concat(this.newCoin.amount);\n      axios.put(this.url + extraParams, {}, {\n        headers: {\n          'Authorization': this.auth\n        }\n      }).then(function (res) {\n        try {\n          // this.state = \"ready\";\n          // alert(\"API offline: UPDATE\");\n          // this.\n          _this2.info = res.data;\n\n          _this2.getCoin(); // this.coins = res.data.coins;\n\n        } catch (error) {\n          // throw error;\n          alert(\"API offline: UPDATE\");\n          _this2.state = \"ready\";\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AAEA;AACAA,qBADA;AAEAC;AACAC,eADA;AAEAC,gBAFA;AAGAC,eAHA;AAIAC;AAJA,GAFA;AASAC;AACA;AACAC,eADA;AAEAC,oBAFA;AAGAC;AACAT,kBADA;AAEAU;AAFA,OAHA;AAOAC,mBAPA;AAQAC;AARA;AAUA,GApBA;AAqBAC,SArBA,qBAqBA;AACA;AACA;AACA;AACA,GAzBA;AA0BAC;AACAC,WADA,qBACA;AAAA;;AACA;AACAC,YACAC,GADA,CACA,QADA,EAEA;AAAAC;AACA;AADA;AAAA,OAFA,EAKAC,IALA,CAKA;AACA;AACA;AACA,OARA;AAUA,KAbA;AAcAC,YAdA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,kBAcA;AACA;AACA;AACAC;AAEAA;AAEA,KArBA;AAsBAC,cAtBA,wBAsBA;AAAA;;AACA;;AACA;AACAC;AACA;AACA;;AACA;AACAP;AACAE;AACA;AADA;AADA,SAIAC,IAJA,CAIA;AACA;AACA;AACA;AACA;AACA;;AACA,2BALA,CAMA;;AACA,SAPA,CAOA;AACA;AACAK;AACA;AACA;AAEA,OAlBA;AAmBA;AAhDA;AA1BA","names":["name","props","msg","auth","jwt","email","data","coins","state","newCoin","amount","userEmail","url","mounted","methods","getCoin","axios","get","headers","then","parseJwt","COGNITO_ID_TOKEN","updateCoin","console","alert"],"sourceRoot":"src/components","sources":["Portfolio.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>{{ msg }}</h1>\n    <body>\n        <a href=\"https://my-coins.auth.us-east-2.amazoncognito.com/login?client_id=n2l1crskuigpqp3lrbsj8r7nj&response_type=token&scope=email+openid&redirect_uri=http://localhost:8080\">Login</a>\n        <div>\n            <div></div>\n            <input v-model=\"newCoin.name\" placeholder=\"coin name\">\n            <input v-model=\"newCoin.amount\" type=\"text\" placeholder=\"amount\">\n            <input @click=\"updateCoin\" type=\"button\" value=\"Update Portfolio\">\n        </div>\n\n        <div class=\"container\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Coin</th>\n                        <th>Amount</th>\n                        <th>Price</th>\n                        <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody v-if=\"state === 'ready'\">\n                    <tr v-for=\"(coin, i) in coins\" :key=\"coin.name\">\n                        <td>{{i}}</td>\n                        <td>{{coin.amount}}</td>\n                        <td>${{coin.price.toFixed(2)}}</td>\n                        <td>${{coin.value.toFixed(2)}}</td>\n                    </tr>\n                </tbody>\n            </table>  \n            <div v-if=\"state === 'loading'\">\n                   <p>loading data...</p>\n            </div>\n        </div>\n    </body>\n  </div>\n</template>\n\n<script>\n// https://my-coins.auth.us-east-2.amazoncognito.com/login?client_id=n2l1crskuigpqp3lrbsj8r7nj&response_type=token&scope=email+openid&redirect_uri=http://localhost:8080/\nimport axios from 'axios';\n\nexport default {\n  name: 'MyPortfolio',\n  props: {\n    msg: String,\n    auth: String,\n    jwt: String,\n    email: String\n  },\n\n  data: function() {\n      return {\n          coins: [],\n          state: \"ready\",\n          newCoin: {\n              name: null,\n              amount: null,\n          },\n          userEmail: \"\",\n          url: `https://t3d210uhn7.execute-api.us-east-2.amazonaws.com/test/portfolio?emailId=${this.userEmail}`\n      }\n  },\n  mounted () {\n      this.state = \"loading\"\n      this.getCoin();\n      this.parseJwt();\n  },\n  methods: {\n    getCoin() {\n      this.state = \"loading\"\n      axios\n        .get(this.url,\n        {headers: {\n            \"Authorization\": this.auth\n        }})\n        .then(response => {\n            this.coins = response.data.coins\n            this.state = \"ready\"\n        }\n        )\n    },\n    parseJwt() {\n        var authTokenWithEquals = (location.href.split('#')[1]).split('&')[1];\n        var COGNITO_ID_TOKEN = idTokenWithEquals.split('=')[1];\n        COGNITO_ID_TOKEN = parseJwt(COGNITO_ID_TOKEN);\n\n        COGNITO_ID_TOKEN.email \n\n},\n    updateCoin() {\n        this.state = \"loading\";\n        if (this.newCoin.name === null || this.newCoin.amount === null) {\n            console.log(\"empty updatecoin\");\n            return;\n        }\n        let extraParams = `&coinId=${this.newCoin.name}&amount=${this.newCoin.amount}`\n        axios.put(this.url + extraParams, {}, {\n        headers: {\n            'Authorization': this.auth,\n        }\n        }).then((res) => {\n            try {\n                // this.state = \"ready\";\n                // alert(\"API offline: UPDATE\");\n                // this.\n                this.info = res.data;\n                this.getCoin();\n                // this.coins = res.data.coins;\n            } catch (error) { \n                // throw error;\n                alert(\"API offline: UPDATE\");\n                this.state = \"ready\";\n            }\n            \n        })\n   },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n@import url('~simpledotcss/simple.min.css');\n\n.margin-standard {\n    margin-right: 20px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}