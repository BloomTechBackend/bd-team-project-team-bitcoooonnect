{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/web.atob.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.concat.js\";\n//\n//\n//\n//\n//\n//\n//\n//\nimport MyPortfolio from './components/Portfolio.vue';\nexport default {\n  name: 'App',\n  components: {\n    MyPortfolio: MyPortfolio\n  },\n  data: function data() {\n    return {\n      window: window.location.href.split('#')[1].split('&')[1].split('=')[1]\n    };\n  },\n  methods: {\n    getCoin: function getCoin() {\n      var _this = this;\n\n      this.state = \"loading\";\n      axios.get(this.url, {\n        headers: {\n          \"Authorization\": this.auth\n        }\n      }).then(function (response) {\n        _this.coins = response.data.coins;\n        _this.state = \"ready\";\n      });\n    },\n    getEmail: function getEmail() {\n      var idTokenWithEquals = location.href.split('#')[1].split('&')[0];\n      var COGNITO_ID_TOKEN = idTokenWithEquals.split('=')[1];\n      COGNITO_ID_TOKEN = this.parseJwt(COGNITO_ID_TOKEN);\n      this.userEmail = COGNITO_ID_TOKEN.email;\n    },\n    parseJwt: function parseJwt(token) {\n      var base64Url = token.split('.')[1];\n      var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      return JSON.parse(jsonPayload);\n    },\n    updateCoin: function updateCoin() {\n      var _this2 = this;\n\n      this.state = \"loading\";\n\n      if (this.newCoin.name === null || this.newCoin.amount === null) {\n        console.log(\"empty updatecoin\");\n        return;\n      }\n\n      var extraParams = \"&coinId=\".concat(this.newCoin.name, \"&amount=\").concat(this.newCoin.amount);\n      axios.put(this.url + extraParams, {}, {\n        headers: {\n          'Authorization': this.auth\n        }\n      }).then(function (res) {\n        try {\n          // this.state = \"ready\";\n          // alert(\"API offline: UPDATE\");\n          // this.\n          _this2.info = res.data;\n\n          _this2.getCoin(); // this.coins = res.data.coins;\n\n        } catch (error) {\n          // throw error;\n          alert(\"API offline: UPDATE\");\n          _this2.state = \"ready\";\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AASA;AAEA;AACAA,aADA;AAEAC;AACAC;AADA,GAFA;AAKAC,MALA,kBAKA;AACA;AACAC;AADA;AAGA,GATA;AAUAC;AACAC,WADA,qBACA;AAAA;;AACA;AACAC,YACAC,GADA,CACA,QADA,EAEA;AAAAC;AACA;AADA;AAAA,OAFA,EAKAC,IALA,CAKA;AACA;AACA;AACA,OARA;AAUA,KAbA;AAcAC,YAdA,sBAcA;AACA;AACA;AACAC;AAEA;AAEA,KArBA;AAsBAC,YAtBA,oBAsBAC,KAtBA,EAsBA;AACA;AACA;AACA;AACA;AACA,OAFA,EAEAC,IAFA,CAEA,EAFA;AAIA;AACA,KA9BA;AAgCAC,cAhCA,wBAgCA;AAAA;;AACA;;AACA;AACAC;AACA;AACA;;AACA;AACAV;AACAE;AACA;AADA;AADA,SAIAC,IAJA,CAIA;AACA;AACA;AACA;AACA;AACA;;AACA,2BALA,CAMA;;AACA,SAPA,CAOA;AACA;AACAQ;AACA;AACA;AAEA,OAlBA;AAmBA;AA1DA;AAVA","names":["name","components","MyPortfolio","data","window","methods","getCoin","axios","get","headers","then","getEmail","COGNITO_ID_TOKEN","parseJwt","token","join","updateCoin","console","alert"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <my-portfolio msg=\"My Crypto Portfolio\" email=\"rondwalker22@yahoo.com\" \n    :auth=\"window\"\n    />\n  </div>\n</template>\n\n<script>\nimport MyPortfolio from './components/Portfolio.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    MyPortfolio\n  },\n  data() {\n      return {\n          window: (window.location.href.split('#')[1]).split('&')[1].split('=')[1]\n      }\n  },\n    methods: {\n    getCoin() {\n      this.state = \"loading\"\n      axios\n        .get(this.url,\n        {headers: {\n            \"Authorization\": this.auth\n        }})\n        .then(response => {\n            this.coins = response.data.coins\n            this.state = \"ready\"\n        }\n        )\n    },\n    getEmail() {\n        var idTokenWithEquals = (location.href.split('#')[1]).split('&')[0];\n        var COGNITO_ID_TOKEN = idTokenWithEquals.split('=')[1];\n        COGNITO_ID_TOKEN = this.parseJwt(COGNITO_ID_TOKEN);\n\n        this.userEmail = COGNITO_ID_TOKEN.email \n\n    },\n    parseJwt(token) {\n        var base64Url = token.split('.')[1];\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n\n        return JSON.parse(jsonPayload);\n    },\n\n    updateCoin() {\n        this.state = \"loading\";\n        if (this.newCoin.name === null || this.newCoin.amount === null) {\n            console.log(\"empty updatecoin\");\n            return;\n        }\n        let extraParams = `&coinId=${this.newCoin.name}&amount=${this.newCoin.amount}`\n        axios.put(this.url + extraParams, {}, {\n        headers: {\n            'Authorization': this.auth,\n        }\n        }).then((res) => {\n            try {\n                // this.state = \"ready\";\n                // alert(\"API offline: UPDATE\");\n                // this.\n                this.info = res.data;\n                this.getCoin();\n                // this.coins = res.data.coins;\n            } catch (error) { \n                // throw error;\n                alert(\"API offline: UPDATE\");\n                this.state = \"ready\";\n            }\n            \n        })\n   },\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}